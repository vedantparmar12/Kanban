version: '3.8'

services:
  neo4j:
    image: neo4j:5-enterprise
    container_name: kanban_neo4j
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-password123}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 512m
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - kanban_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: kanban_redis
    ports:
      - "6379:6379"
    networks:
      - kanban_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: kanban_backend
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-password123}
      REDIS_URL: redis://redis:6379
      MCP_SERVER_URL: http://mcp-server:8000
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      mcp-server:
        condition: service_started
    ports:
      - "3000:3000"
    networks:
      - kanban_network
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: kanban_frontend
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_WS_URL: ws://localhost:3000
    depends_on:
      - backend
    ports:
      - "5173:5173"
    networks:
      - kanban_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: ../docker/Dockerfile.mcp
    container_name: kanban_mcp
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MCP_API_KEY: ${MCP_API_KEY:-mcp-secret-key}
      REPO_PATH: /app/repos
    volumes:
      - ./repos:/app/repos
    ports:
      - "8000:8000"
    networks:
      - kanban_network

  nginx:
    image: nginx:alpine
    container_name: kanban_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - kanban_network

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  kanban_network:
    driver: bridge